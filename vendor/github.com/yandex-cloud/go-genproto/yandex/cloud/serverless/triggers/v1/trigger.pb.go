// Code generated by protoc-gen-go. DO NOT EDIT.
// source: yandex/cloud/serverless/triggers/v1/trigger.proto

package triggers

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	duration "github.com/golang/protobuf/ptypes/duration"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	_ "github.com/yandex-cloud/go-genproto/yandex/cloud"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type TriggerType int32

const (
	TriggerType_TRIGGER_TYPE_UNSPECIFIED TriggerType = 0
	// The trigger is activated on a timer.
	TriggerType_TIMER TriggerType = 2
	// The trigger is activated by messages from a message queue.
	//
	// Only Yandex Message Queue is currently supported.
	TriggerType_MESSAGE_QUEUE TriggerType = 3
	// The trigger is activated by messages from Yandex IoT Core.
	TriggerType_IOT_MESSAGE        TriggerType = 4
	TriggerType_OBJECT_STORAGE     TriggerType = 5
	TriggerType_CONTAINER_REGISTRY TriggerType = 6
	// The trigger is activated by cloud log group events
	TriggerType_CLOUD_LOGS TriggerType = 7
)

var TriggerType_name = map[int32]string{
	0: "TRIGGER_TYPE_UNSPECIFIED",
	2: "TIMER",
	3: "MESSAGE_QUEUE",
	4: "IOT_MESSAGE",
	5: "OBJECT_STORAGE",
	6: "CONTAINER_REGISTRY",
	7: "CLOUD_LOGS",
}

var TriggerType_value = map[string]int32{
	"TRIGGER_TYPE_UNSPECIFIED": 0,
	"TIMER":                    2,
	"MESSAGE_QUEUE":            3,
	"IOT_MESSAGE":              4,
	"OBJECT_STORAGE":           5,
	"CONTAINER_REGISTRY":       6,
	"CLOUD_LOGS":               7,
}

func (x TriggerType) String() string {
	return proto.EnumName(TriggerType_name, int32(x))
}

func (TriggerType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_83d7b339cc811d06, []int{0}
}

type Trigger_ObjectStorageEventType int32

const (
	Trigger_OBJECT_STORAGE_EVENT_TYPE_UNSPECIFIED   Trigger_ObjectStorageEventType = 0
	Trigger_OBJECT_STORAGE_EVENT_TYPE_CREATE_OBJECT Trigger_ObjectStorageEventType = 1
	Trigger_OBJECT_STORAGE_EVENT_TYPE_UPDATE_OBJECT Trigger_ObjectStorageEventType = 2
	Trigger_OBJECT_STORAGE_EVENT_TYPE_DELETE_OBJECT Trigger_ObjectStorageEventType = 3
)

var Trigger_ObjectStorageEventType_name = map[int32]string{
	0: "OBJECT_STORAGE_EVENT_TYPE_UNSPECIFIED",
	1: "OBJECT_STORAGE_EVENT_TYPE_CREATE_OBJECT",
	2: "OBJECT_STORAGE_EVENT_TYPE_UPDATE_OBJECT",
	3: "OBJECT_STORAGE_EVENT_TYPE_DELETE_OBJECT",
}

var Trigger_ObjectStorageEventType_value = map[string]int32{
	"OBJECT_STORAGE_EVENT_TYPE_UNSPECIFIED":   0,
	"OBJECT_STORAGE_EVENT_TYPE_CREATE_OBJECT": 1,
	"OBJECT_STORAGE_EVENT_TYPE_UPDATE_OBJECT": 2,
	"OBJECT_STORAGE_EVENT_TYPE_DELETE_OBJECT": 3,
}

func (x Trigger_ObjectStorageEventType) String() string {
	return proto.EnumName(Trigger_ObjectStorageEventType_name, int32(x))
}

func (Trigger_ObjectStorageEventType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_83d7b339cc811d06, []int{0, 0}
}

type Trigger_ContainerRegistryEventType int32

const (
	Trigger_CONTAINER_REGISTRY_EVENT_TYPE_UNSPECIFIED      Trigger_ContainerRegistryEventType = 0
	Trigger_CONTAINER_REGISTRY_EVENT_TYPE_CREATE_IMAGE     Trigger_ContainerRegistryEventType = 1
	Trigger_CONTAINER_REGISTRY_EVENT_TYPE_DELETE_IMAGE     Trigger_ContainerRegistryEventType = 2
	Trigger_CONTAINER_REGISTRY_EVENT_TYPE_CREATE_IMAGE_TAG Trigger_ContainerRegistryEventType = 3
	Trigger_CONTAINER_REGISTRY_EVENT_TYPE_DELETE_IMAGE_TAG Trigger_ContainerRegistryEventType = 4
)

var Trigger_ContainerRegistryEventType_name = map[int32]string{
	0: "CONTAINER_REGISTRY_EVENT_TYPE_UNSPECIFIED",
	1: "CONTAINER_REGISTRY_EVENT_TYPE_CREATE_IMAGE",
	2: "CONTAINER_REGISTRY_EVENT_TYPE_DELETE_IMAGE",
	3: "CONTAINER_REGISTRY_EVENT_TYPE_CREATE_IMAGE_TAG",
	4: "CONTAINER_REGISTRY_EVENT_TYPE_DELETE_IMAGE_TAG",
}

var Trigger_ContainerRegistryEventType_value = map[string]int32{
	"CONTAINER_REGISTRY_EVENT_TYPE_UNSPECIFIED":      0,
	"CONTAINER_REGISTRY_EVENT_TYPE_CREATE_IMAGE":     1,
	"CONTAINER_REGISTRY_EVENT_TYPE_DELETE_IMAGE":     2,
	"CONTAINER_REGISTRY_EVENT_TYPE_CREATE_IMAGE_TAG": 3,
	"CONTAINER_REGISTRY_EVENT_TYPE_DELETE_IMAGE_TAG": 4,
}

func (x Trigger_ContainerRegistryEventType) String() string {
	return proto.EnumName(Trigger_ContainerRegistryEventType_name, int32(x))
}

func (Trigger_ContainerRegistryEventType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_83d7b339cc811d06, []int{0, 1}
}

type Trigger_Status int32

const (
	Trigger_STATUS_UNSPECIFIED Trigger_Status = 0
	Trigger_ACTIVE             Trigger_Status = 1
	Trigger_PAUSED             Trigger_Status = 2
)

var Trigger_Status_name = map[int32]string{
	0: "STATUS_UNSPECIFIED",
	1: "ACTIVE",
	2: "PAUSED",
}

var Trigger_Status_value = map[string]int32{
	"STATUS_UNSPECIFIED": 0,
	"ACTIVE":             1,
	"PAUSED":             2,
}

func (x Trigger_Status) String() string {
	return proto.EnumName(Trigger_Status_name, int32(x))
}

func (Trigger_Status) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_83d7b339cc811d06, []int{0, 2}
}

// A trigger to invoke a serverless function. For more information, see [Triggers](/docs/functions/concepts/trigger).
type Trigger struct {
	// ID of the trigger. Generated at creation time.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// ID of the folder that the trigger belongs to.
	FolderId string `protobuf:"bytes,2,opt,name=folder_id,json=folderId,proto3" json:"folder_id,omitempty"`
	// Creation timestamp for the trigger.
	CreatedAt *timestamp.Timestamp `protobuf:"bytes,3,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	// Name of the trigger.
	Name string `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	// Description of the trigger.
	Description string `protobuf:"bytes,5,opt,name=description,proto3" json:"description,omitempty"`
	// Trigger labels as `key:value` pairs.
	Labels map[string]string `protobuf:"bytes,6,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// Rule for trigger activation (always consistent with the trigger type).
	Rule *Trigger_Rule `protobuf:"bytes,8,opt,name=rule,proto3" json:"rule,omitempty"`
	// Trigger status
	Status               Trigger_Status `protobuf:"varint,9,opt,name=status,proto3,enum=yandex.cloud.serverless.triggers.v1.Trigger_Status" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *Trigger) Reset()         { *m = Trigger{} }
func (m *Trigger) String() string { return proto.CompactTextString(m) }
func (*Trigger) ProtoMessage()    {}
func (*Trigger) Descriptor() ([]byte, []int) {
	return fileDescriptor_83d7b339cc811d06, []int{0}
}

func (m *Trigger) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Trigger.Unmarshal(m, b)
}
func (m *Trigger) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Trigger.Marshal(b, m, deterministic)
}
func (m *Trigger) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Trigger.Merge(m, src)
}
func (m *Trigger) XXX_Size() int {
	return xxx_messageInfo_Trigger.Size(m)
}
func (m *Trigger) XXX_DiscardUnknown() {
	xxx_messageInfo_Trigger.DiscardUnknown(m)
}

var xxx_messageInfo_Trigger proto.InternalMessageInfo

func (m *Trigger) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Trigger) GetFolderId() string {
	if m != nil {
		return m.FolderId
	}
	return ""
}

func (m *Trigger) GetCreatedAt() *timestamp.Timestamp {
	if m != nil {
		return m.CreatedAt
	}
	return nil
}

func (m *Trigger) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Trigger) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Trigger) GetLabels() map[string]string {
	if m != nil {
		return m.Labels
	}
	return nil
}

func (m *Trigger) GetRule() *Trigger_Rule {
	if m != nil {
		return m.Rule
	}
	return nil
}

func (m *Trigger) GetStatus() Trigger_Status {
	if m != nil {
		return m.Status
	}
	return Trigger_STATUS_UNSPECIFIED
}

// Description of a rule for trigger activation.
type Trigger_Rule struct {
	// Types that are valid to be assigned to Rule:
	//	*Trigger_Rule_Timer
	//	*Trigger_Rule_MessageQueue
	//	*Trigger_Rule_IotMessage
	//	*Trigger_Rule_ObjectStorage
	//	*Trigger_Rule_ContainerRegistry
	//	*Trigger_Rule_CloudLogs
	Rule                 isTrigger_Rule_Rule `protobuf_oneof:"rule"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *Trigger_Rule) Reset()         { *m = Trigger_Rule{} }
func (m *Trigger_Rule) String() string { return proto.CompactTextString(m) }
func (*Trigger_Rule) ProtoMessage()    {}
func (*Trigger_Rule) Descriptor() ([]byte, []int) {
	return fileDescriptor_83d7b339cc811d06, []int{0, 1}
}

func (m *Trigger_Rule) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Trigger_Rule.Unmarshal(m, b)
}
func (m *Trigger_Rule) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Trigger_Rule.Marshal(b, m, deterministic)
}
func (m *Trigger_Rule) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Trigger_Rule.Merge(m, src)
}
func (m *Trigger_Rule) XXX_Size() int {
	return xxx_messageInfo_Trigger_Rule.Size(m)
}
func (m *Trigger_Rule) XXX_DiscardUnknown() {
	xxx_messageInfo_Trigger_Rule.DiscardUnknown(m)
}

var xxx_messageInfo_Trigger_Rule proto.InternalMessageInfo

type isTrigger_Rule_Rule interface {
	isTrigger_Rule_Rule()
}

type Trigger_Rule_Timer struct {
	Timer *Trigger_Timer `protobuf:"bytes,2,opt,name=timer,proto3,oneof"`
}

type Trigger_Rule_MessageQueue struct {
	MessageQueue *Trigger_MessageQueue `protobuf:"bytes,3,opt,name=message_queue,json=messageQueue,proto3,oneof"`
}

type Trigger_Rule_IotMessage struct {
	IotMessage *Trigger_IoTMessage `protobuf:"bytes,4,opt,name=iot_message,json=iotMessage,proto3,oneof"`
}

type Trigger_Rule_ObjectStorage struct {
	ObjectStorage *Trigger_ObjectStorage `protobuf:"bytes,5,opt,name=object_storage,json=objectStorage,proto3,oneof"`
}

type Trigger_Rule_ContainerRegistry struct {
	ContainerRegistry *Trigger_ContainerRegistry `protobuf:"bytes,6,opt,name=container_registry,json=containerRegistry,proto3,oneof"`
}

type Trigger_Rule_CloudLogs struct {
	CloudLogs *Trigger_CloudLogs `protobuf:"bytes,9,opt,name=cloud_logs,json=cloudLogs,proto3,oneof"`
}

func (*Trigger_Rule_Timer) isTrigger_Rule_Rule() {}

func (*Trigger_Rule_MessageQueue) isTrigger_Rule_Rule() {}

func (*Trigger_Rule_IotMessage) isTrigger_Rule_Rule() {}

func (*Trigger_Rule_ObjectStorage) isTrigger_Rule_Rule() {}

func (*Trigger_Rule_ContainerRegistry) isTrigger_Rule_Rule() {}

func (*Trigger_Rule_CloudLogs) isTrigger_Rule_Rule() {}

func (m *Trigger_Rule) GetRule() isTrigger_Rule_Rule {
	if m != nil {
		return m.Rule
	}
	return nil
}

func (m *Trigger_Rule) GetTimer() *Trigger_Timer {
	if x, ok := m.GetRule().(*Trigger_Rule_Timer); ok {
		return x.Timer
	}
	return nil
}

func (m *Trigger_Rule) GetMessageQueue() *Trigger_MessageQueue {
	if x, ok := m.GetRule().(*Trigger_Rule_MessageQueue); ok {
		return x.MessageQueue
	}
	return nil
}

func (m *Trigger_Rule) GetIotMessage() *Trigger_IoTMessage {
	if x, ok := m.GetRule().(*Trigger_Rule_IotMessage); ok {
		return x.IotMessage
	}
	return nil
}

func (m *Trigger_Rule) GetObjectStorage() *Trigger_ObjectStorage {
	if x, ok := m.GetRule().(*Trigger_Rule_ObjectStorage); ok {
		return x.ObjectStorage
	}
	return nil
}

func (m *Trigger_Rule) GetContainerRegistry() *Trigger_ContainerRegistry {
	if x, ok := m.GetRule().(*Trigger_Rule_ContainerRegistry); ok {
		return x.ContainerRegistry
	}
	return nil
}

func (m *Trigger_Rule) GetCloudLogs() *Trigger_CloudLogs {
	if x, ok := m.GetRule().(*Trigger_Rule_CloudLogs); ok {
		return x.CloudLogs
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*Trigger_Rule) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*Trigger_Rule_Timer)(nil),
		(*Trigger_Rule_MessageQueue)(nil),
		(*Trigger_Rule_IotMessage)(nil),
		(*Trigger_Rule_ObjectStorage)(nil),
		(*Trigger_Rule_ContainerRegistry)(nil),
		(*Trigger_Rule_CloudLogs)(nil),
	}
}

// Rule for activating a timed trigger.
type Trigger_Timer struct {
	// Description of a schedule as a [cron expression](/docs/functions/concepts/trigger/timer).
	CronExpression string `protobuf:"bytes,1,opt,name=cron_expression,json=cronExpression,proto3" json:"cron_expression,omitempty"`
	// Action to be executed when the current time matches the [cron_expression].
	//
	// Types that are valid to be assigned to Action:
	//	*Trigger_Timer_InvokeFunction
	//	*Trigger_Timer_InvokeFunctionWithRetry
	Action               isTrigger_Timer_Action `protobuf_oneof:"action"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *Trigger_Timer) Reset()         { *m = Trigger_Timer{} }
func (m *Trigger_Timer) String() string { return proto.CompactTextString(m) }
func (*Trigger_Timer) ProtoMessage()    {}
func (*Trigger_Timer) Descriptor() ([]byte, []int) {
	return fileDescriptor_83d7b339cc811d06, []int{0, 2}
}

func (m *Trigger_Timer) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Trigger_Timer.Unmarshal(m, b)
}
func (m *Trigger_Timer) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Trigger_Timer.Marshal(b, m, deterministic)
}
func (m *Trigger_Timer) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Trigger_Timer.Merge(m, src)
}
func (m *Trigger_Timer) XXX_Size() int {
	return xxx_messageInfo_Trigger_Timer.Size(m)
}
func (m *Trigger_Timer) XXX_DiscardUnknown() {
	xxx_messageInfo_Trigger_Timer.DiscardUnknown(m)
}

var xxx_messageInfo_Trigger_Timer proto.InternalMessageInfo

func (m *Trigger_Timer) GetCronExpression() string {
	if m != nil {
		return m.CronExpression
	}
	return ""
}

type isTrigger_Timer_Action interface {
	isTrigger_Timer_Action()
}

type Trigger_Timer_InvokeFunction struct {
	InvokeFunction *InvokeFunctionOnce `protobuf:"bytes,101,opt,name=invoke_function,json=invokeFunction,proto3,oneof"`
}

type Trigger_Timer_InvokeFunctionWithRetry struct {
	InvokeFunctionWithRetry *InvokeFunctionWithRetry `protobuf:"bytes,103,opt,name=invoke_function_with_retry,json=invokeFunctionWithRetry,proto3,oneof"`
}

func (*Trigger_Timer_InvokeFunction) isTrigger_Timer_Action() {}

func (*Trigger_Timer_InvokeFunctionWithRetry) isTrigger_Timer_Action() {}

func (m *Trigger_Timer) GetAction() isTrigger_Timer_Action {
	if m != nil {
		return m.Action
	}
	return nil
}

func (m *Trigger_Timer) GetInvokeFunction() *InvokeFunctionOnce {
	if x, ok := m.GetAction().(*Trigger_Timer_InvokeFunction); ok {
		return x.InvokeFunction
	}
	return nil
}

func (m *Trigger_Timer) GetInvokeFunctionWithRetry() *InvokeFunctionWithRetry {
	if x, ok := m.GetAction().(*Trigger_Timer_InvokeFunctionWithRetry); ok {
		return x.InvokeFunctionWithRetry
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*Trigger_Timer) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*Trigger_Timer_InvokeFunction)(nil),
		(*Trigger_Timer_InvokeFunctionWithRetry)(nil),
	}
}

// Rule for activating a message queue trigger.
type Trigger_MessageQueue struct {
	// ID of the message queue in Yandex Message Queue.
	QueueId string `protobuf:"bytes,11,opt,name=queue_id,json=queueId,proto3" json:"queue_id,omitempty"`
	// ID of the service account which has read access to the message queue.
	ServiceAccountId string `protobuf:"bytes,3,opt,name=service_account_id,json=serviceAccountId,proto3" json:"service_account_id,omitempty"`
	// Batch settings for processing messages in the queue.
	BatchSettings *BatchSettings `protobuf:"bytes,4,opt,name=batch_settings,json=batchSettings,proto3" json:"batch_settings,omitempty"`
	// Queue visibility timeout override.
	VisibilityTimeout *duration.Duration `protobuf:"bytes,5,opt,name=visibility_timeout,json=visibilityTimeout,proto3" json:"visibility_timeout,omitempty"`
	// Action to be executed when the there's a new message in the queue.
	//
	// Types that are valid to be assigned to Action:
	//	*Trigger_MessageQueue_InvokeFunction
	Action               isTrigger_MessageQueue_Action `protobuf_oneof:"action"`
	XXX_NoUnkeyedLiteral struct{}                      `json:"-"`
	XXX_unrecognized     []byte                        `json:"-"`
	XXX_sizecache        int32                         `json:"-"`
}

func (m *Trigger_MessageQueue) Reset()         { *m = Trigger_MessageQueue{} }
func (m *Trigger_MessageQueue) String() string { return proto.CompactTextString(m) }
func (*Trigger_MessageQueue) ProtoMessage()    {}
func (*Trigger_MessageQueue) Descriptor() ([]byte, []int) {
	return fileDescriptor_83d7b339cc811d06, []int{0, 3}
}

func (m *Trigger_MessageQueue) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Trigger_MessageQueue.Unmarshal(m, b)
}
func (m *Trigger_MessageQueue) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Trigger_MessageQueue.Marshal(b, m, deterministic)
}
func (m *Trigger_MessageQueue) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Trigger_MessageQueue.Merge(m, src)
}
func (m *Trigger_MessageQueue) XXX_Size() int {
	return xxx_messageInfo_Trigger_MessageQueue.Size(m)
}
func (m *Trigger_MessageQueue) XXX_DiscardUnknown() {
	xxx_messageInfo_Trigger_MessageQueue.DiscardUnknown(m)
}

var xxx_messageInfo_Trigger_MessageQueue proto.InternalMessageInfo

func (m *Trigger_MessageQueue) GetQueueId() string {
	if m != nil {
		return m.QueueId
	}
	return ""
}

func (m *Trigger_MessageQueue) GetServiceAccountId() string {
	if m != nil {
		return m.ServiceAccountId
	}
	return ""
}

func (m *Trigger_MessageQueue) GetBatchSettings() *BatchSettings {
	if m != nil {
		return m.BatchSettings
	}
	return nil
}

func (m *Trigger_MessageQueue) GetVisibilityTimeout() *duration.Duration {
	if m != nil {
		return m.VisibilityTimeout
	}
	return nil
}

type isTrigger_MessageQueue_Action interface {
	isTrigger_MessageQueue_Action()
}

type Trigger_MessageQueue_InvokeFunction struct {
	InvokeFunction *InvokeFunctionOnce `protobuf:"bytes,101,opt,name=invoke_function,json=invokeFunction,proto3,oneof"`
}

func (*Trigger_MessageQueue_InvokeFunction) isTrigger_MessageQueue_Action() {}

func (m *Trigger_MessageQueue) GetAction() isTrigger_MessageQueue_Action {
	if m != nil {
		return m.Action
	}
	return nil
}

func (m *Trigger_MessageQueue) GetInvokeFunction() *InvokeFunctionOnce {
	if x, ok := m.GetAction().(*Trigger_MessageQueue_InvokeFunction); ok {
		return x.InvokeFunction
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*Trigger_MessageQueue) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*Trigger_MessageQueue_InvokeFunction)(nil),
	}
}

// Rule for activating a Yandex IoT Core trigger.
type Trigger_IoTMessage struct {
	// ID of the Yandex IoT Core registry.
	RegistryId string `protobuf:"bytes,1,opt,name=registry_id,json=registryId,proto3" json:"registry_id,omitempty"`
	// ID of the Yandex IoT Core device in the registry.
	DeviceId string `protobuf:"bytes,2,opt,name=device_id,json=deviceId,proto3" json:"device_id,omitempty"`
	// MQTT topic whose messages activate the trigger.
	MqttTopic string `protobuf:"bytes,3,opt,name=mqtt_topic,json=mqttTopic,proto3" json:"mqtt_topic,omitempty"`
	// Action to be executed when the there's a new message in the MQTT topic.
	//
	// Types that are valid to be assigned to Action:
	//	*Trigger_IoTMessage_InvokeFunction
	Action               isTrigger_IoTMessage_Action `protobuf_oneof:"action"`
	XXX_NoUnkeyedLiteral struct{}                    `json:"-"`
	XXX_unrecognized     []byte                      `json:"-"`
	XXX_sizecache        int32                       `json:"-"`
}

func (m *Trigger_IoTMessage) Reset()         { *m = Trigger_IoTMessage{} }
func (m *Trigger_IoTMessage) String() string { return proto.CompactTextString(m) }
func (*Trigger_IoTMessage) ProtoMessage()    {}
func (*Trigger_IoTMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_83d7b339cc811d06, []int{0, 4}
}

func (m *Trigger_IoTMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Trigger_IoTMessage.Unmarshal(m, b)
}
func (m *Trigger_IoTMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Trigger_IoTMessage.Marshal(b, m, deterministic)
}
func (m *Trigger_IoTMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Trigger_IoTMessage.Merge(m, src)
}
func (m *Trigger_IoTMessage) XXX_Size() int {
	return xxx_messageInfo_Trigger_IoTMessage.Size(m)
}
func (m *Trigger_IoTMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_Trigger_IoTMessage.DiscardUnknown(m)
}

var xxx_messageInfo_Trigger_IoTMessage proto.InternalMessageInfo

func (m *Trigger_IoTMessage) GetRegistryId() string {
	if m != nil {
		return m.RegistryId
	}
	return ""
}

func (m *Trigger_IoTMessage) GetDeviceId() string {
	if m != nil {
		return m.DeviceId
	}
	return ""
}

func (m *Trigger_IoTMessage) GetMqttTopic() string {
	if m != nil {
		return m.MqttTopic
	}
	return ""
}

type isTrigger_IoTMessage_Action interface {
	isTrigger_IoTMessage_Action()
}

type Trigger_IoTMessage_InvokeFunction struct {
	InvokeFunction *InvokeFunctionWithRetry `protobuf:"bytes,101,opt,name=invoke_function,json=invokeFunction,proto3,oneof"`
}

func (*Trigger_IoTMessage_InvokeFunction) isTrigger_IoTMessage_Action() {}

func (m *Trigger_IoTMessage) GetAction() isTrigger_IoTMessage_Action {
	if m != nil {
		return m.Action
	}
	return nil
}

func (m *Trigger_IoTMessage) GetInvokeFunction() *InvokeFunctionWithRetry {
	if x, ok := m.GetAction().(*Trigger_IoTMessage_InvokeFunction); ok {
		return x.InvokeFunction
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*Trigger_IoTMessage) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*Trigger_IoTMessage_InvokeFunction)(nil),
	}
}

type Trigger_ObjectStorage struct {
	// Type (name) of events, at least one value is required.
	EventType []Trigger_ObjectStorageEventType `protobuf:"varint,3,rep,packed,name=event_type,json=eventType,proto3,enum=yandex.cloud.serverless.triggers.v1.Trigger_ObjectStorageEventType" json:"event_type,omitempty"`
	BucketId  string                           `protobuf:"bytes,4,opt,name=bucket_id,json=bucketId,proto3" json:"bucket_id,omitempty"`
	// Filter, optional.
	Prefix string `protobuf:"bytes,6,opt,name=prefix,proto3" json:"prefix,omitempty"`
	Suffix string `protobuf:"bytes,7,opt,name=suffix,proto3" json:"suffix,omitempty"`
	// Types that are valid to be assigned to Action:
	//	*Trigger_ObjectStorage_InvokeFunction
	Action               isTrigger_ObjectStorage_Action `protobuf_oneof:"action"`
	XXX_NoUnkeyedLiteral struct{}                       `json:"-"`
	XXX_unrecognized     []byte                         `json:"-"`
	XXX_sizecache        int32                          `json:"-"`
}

func (m *Trigger_ObjectStorage) Reset()         { *m = Trigger_ObjectStorage{} }
func (m *Trigger_ObjectStorage) String() string { return proto.CompactTextString(m) }
func (*Trigger_ObjectStorage) ProtoMessage()    {}
func (*Trigger_ObjectStorage) Descriptor() ([]byte, []int) {
	return fileDescriptor_83d7b339cc811d06, []int{0, 5}
}

func (m *Trigger_ObjectStorage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Trigger_ObjectStorage.Unmarshal(m, b)
}
func (m *Trigger_ObjectStorage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Trigger_ObjectStorage.Marshal(b, m, deterministic)
}
func (m *Trigger_ObjectStorage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Trigger_ObjectStorage.Merge(m, src)
}
func (m *Trigger_ObjectStorage) XXX_Size() int {
	return xxx_messageInfo_Trigger_ObjectStorage.Size(m)
}
func (m *Trigger_ObjectStorage) XXX_DiscardUnknown() {
	xxx_messageInfo_Trigger_ObjectStorage.DiscardUnknown(m)
}

var xxx_messageInfo_Trigger_ObjectStorage proto.InternalMessageInfo

func (m *Trigger_ObjectStorage) GetEventType() []Trigger_ObjectStorageEventType {
	if m != nil {
		return m.EventType
	}
	return nil
}

func (m *Trigger_ObjectStorage) GetBucketId() string {
	if m != nil {
		return m.BucketId
	}
	return ""
}

func (m *Trigger_ObjectStorage) GetPrefix() string {
	if m != nil {
		return m.Prefix
	}
	return ""
}

func (m *Trigger_ObjectStorage) GetSuffix() string {
	if m != nil {
		return m.Suffix
	}
	return ""
}

type isTrigger_ObjectStorage_Action interface {
	isTrigger_ObjectStorage_Action()
}

type Trigger_ObjectStorage_InvokeFunction struct {
	InvokeFunction *InvokeFunctionWithRetry `protobuf:"bytes,101,opt,name=invoke_function,json=invokeFunction,proto3,oneof"`
}

func (*Trigger_ObjectStorage_InvokeFunction) isTrigger_ObjectStorage_Action() {}

func (m *Trigger_ObjectStorage) GetAction() isTrigger_ObjectStorage_Action {
	if m != nil {
		return m.Action
	}
	return nil
}

func (m *Trigger_ObjectStorage) GetInvokeFunction() *InvokeFunctionWithRetry {
	if x, ok := m.GetAction().(*Trigger_ObjectStorage_InvokeFunction); ok {
		return x.InvokeFunction
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*Trigger_ObjectStorage) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*Trigger_ObjectStorage_InvokeFunction)(nil),
	}
}

type Trigger_ContainerRegistry struct {
	// Type (name) of events, at least one value is required.
	EventType  []Trigger_ContainerRegistryEventType `protobuf:"varint,3,rep,packed,name=event_type,json=eventType,proto3,enum=yandex.cloud.serverless.triggers.v1.Trigger_ContainerRegistryEventType" json:"event_type,omitempty"`
	RegistryId string                               `protobuf:"bytes,4,opt,name=registry_id,json=registryId,proto3" json:"registry_id,omitempty"`
	// Filter, optional.
	ImageName string `protobuf:"bytes,5,opt,name=image_name,json=imageName,proto3" json:"image_name,omitempty"`
	Tag       string `protobuf:"bytes,6,opt,name=tag,proto3" json:"tag,omitempty"`
	// Types that are valid to be assigned to Action:
	//	*Trigger_ContainerRegistry_InvokeFunction
	Action               isTrigger_ContainerRegistry_Action `protobuf_oneof:"action"`
	XXX_NoUnkeyedLiteral struct{}                           `json:"-"`
	XXX_unrecognized     []byte                             `json:"-"`
	XXX_sizecache        int32                              `json:"-"`
}

func (m *Trigger_ContainerRegistry) Reset()         { *m = Trigger_ContainerRegistry{} }
func (m *Trigger_ContainerRegistry) String() string { return proto.CompactTextString(m) }
func (*Trigger_ContainerRegistry) ProtoMessage()    {}
func (*Trigger_ContainerRegistry) Descriptor() ([]byte, []int) {
	return fileDescriptor_83d7b339cc811d06, []int{0, 6}
}

func (m *Trigger_ContainerRegistry) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Trigger_ContainerRegistry.Unmarshal(m, b)
}
func (m *Trigger_ContainerRegistry) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Trigger_ContainerRegistry.Marshal(b, m, deterministic)
}
func (m *Trigger_ContainerRegistry) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Trigger_ContainerRegistry.Merge(m, src)
}
func (m *Trigger_ContainerRegistry) XXX_Size() int {
	return xxx_messageInfo_Trigger_ContainerRegistry.Size(m)
}
func (m *Trigger_ContainerRegistry) XXX_DiscardUnknown() {
	xxx_messageInfo_Trigger_ContainerRegistry.DiscardUnknown(m)
}

var xxx_messageInfo_Trigger_ContainerRegistry proto.InternalMessageInfo

func (m *Trigger_ContainerRegistry) GetEventType() []Trigger_ContainerRegistryEventType {
	if m != nil {
		return m.EventType
	}
	return nil
}

func (m *Trigger_ContainerRegistry) GetRegistryId() string {
	if m != nil {
		return m.RegistryId
	}
	return ""
}

func (m *Trigger_ContainerRegistry) GetImageName() string {
	if m != nil {
		return m.ImageName
	}
	return ""
}

func (m *Trigger_ContainerRegistry) GetTag() string {
	if m != nil {
		return m.Tag
	}
	return ""
}

type isTrigger_ContainerRegistry_Action interface {
	isTrigger_ContainerRegistry_Action()
}

type Trigger_ContainerRegistry_InvokeFunction struct {
	InvokeFunction *InvokeFunctionWithRetry `protobuf:"bytes,101,opt,name=invoke_function,json=invokeFunction,proto3,oneof"`
}

func (*Trigger_ContainerRegistry_InvokeFunction) isTrigger_ContainerRegistry_Action() {}

func (m *Trigger_ContainerRegistry) GetAction() isTrigger_ContainerRegistry_Action {
	if m != nil {
		return m.Action
	}
	return nil
}

func (m *Trigger_ContainerRegistry) GetInvokeFunction() *InvokeFunctionWithRetry {
	if x, ok := m.GetAction().(*Trigger_ContainerRegistry_InvokeFunction); ok {
		return x.InvokeFunction
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*Trigger_ContainerRegistry) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*Trigger_ContainerRegistry_InvokeFunction)(nil),
	}
}

type Trigger_CloudLogs struct {
	// Log group identifiers, at least one value is required.
	LogGroupId []string `protobuf:"bytes,1,rep,name=log_group_id,json=logGroupId,proto3" json:"log_group_id,omitempty"`
	// Batch settings for processing log events.
	BatchSettings *CloudLogsBatchSettings `protobuf:"bytes,2,opt,name=batch_settings,json=batchSettings,proto3" json:"batch_settings,omitempty"`
	// Types that are valid to be assigned to Action:
	//	*Trigger_CloudLogs_InvokeFunction
	Action               isTrigger_CloudLogs_Action `protobuf_oneof:"action"`
	XXX_NoUnkeyedLiteral struct{}                   `json:"-"`
	XXX_unrecognized     []byte                     `json:"-"`
	XXX_sizecache        int32                      `json:"-"`
}

func (m *Trigger_CloudLogs) Reset()         { *m = Trigger_CloudLogs{} }
func (m *Trigger_CloudLogs) String() string { return proto.CompactTextString(m) }
func (*Trigger_CloudLogs) ProtoMessage()    {}
func (*Trigger_CloudLogs) Descriptor() ([]byte, []int) {
	return fileDescriptor_83d7b339cc811d06, []int{0, 7}
}

func (m *Trigger_CloudLogs) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Trigger_CloudLogs.Unmarshal(m, b)
}
func (m *Trigger_CloudLogs) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Trigger_CloudLogs.Marshal(b, m, deterministic)
}
func (m *Trigger_CloudLogs) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Trigger_CloudLogs.Merge(m, src)
}
func (m *Trigger_CloudLogs) XXX_Size() int {
	return xxx_messageInfo_Trigger_CloudLogs.Size(m)
}
func (m *Trigger_CloudLogs) XXX_DiscardUnknown() {
	xxx_messageInfo_Trigger_CloudLogs.DiscardUnknown(m)
}

var xxx_messageInfo_Trigger_CloudLogs proto.InternalMessageInfo

func (m *Trigger_CloudLogs) GetLogGroupId() []string {
	if m != nil {
		return m.LogGroupId
	}
	return nil
}

func (m *Trigger_CloudLogs) GetBatchSettings() *CloudLogsBatchSettings {
	if m != nil {
		return m.BatchSettings
	}
	return nil
}

type isTrigger_CloudLogs_Action interface {
	isTrigger_CloudLogs_Action()
}

type Trigger_CloudLogs_InvokeFunction struct {
	InvokeFunction *InvokeFunctionWithRetry `protobuf:"bytes,101,opt,name=invoke_function,json=invokeFunction,proto3,oneof"`
}

func (*Trigger_CloudLogs_InvokeFunction) isTrigger_CloudLogs_Action() {}

func (m *Trigger_CloudLogs) GetAction() isTrigger_CloudLogs_Action {
	if m != nil {
		return m.Action
	}
	return nil
}

func (m *Trigger_CloudLogs) GetInvokeFunction() *InvokeFunctionWithRetry {
	if x, ok := m.GetAction().(*Trigger_CloudLogs_InvokeFunction); ok {
		return x.InvokeFunction
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*Trigger_CloudLogs) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*Trigger_CloudLogs_InvokeFunction)(nil),
	}
}

// A single function invocation.
type InvokeFunctionOnce struct {
	// ID of the function to invoke.
	FunctionId string `protobuf:"bytes,1,opt,name=function_id,json=functionId,proto3" json:"function_id,omitempty"`
	// Tag of the function version to execute.
	FunctionTag string `protobuf:"bytes,2,opt,name=function_tag,json=functionTag,proto3" json:"function_tag,omitempty"`
	// ID of the service account that should be used to invoke the function.
	ServiceAccountId     string   `protobuf:"bytes,3,opt,name=service_account_id,json=serviceAccountId,proto3" json:"service_account_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *InvokeFunctionOnce) Reset()         { *m = InvokeFunctionOnce{} }
func (m *InvokeFunctionOnce) String() string { return proto.CompactTextString(m) }
func (*InvokeFunctionOnce) ProtoMessage()    {}
func (*InvokeFunctionOnce) Descriptor() ([]byte, []int) {
	return fileDescriptor_83d7b339cc811d06, []int{1}
}

func (m *InvokeFunctionOnce) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InvokeFunctionOnce.Unmarshal(m, b)
}
func (m *InvokeFunctionOnce) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InvokeFunctionOnce.Marshal(b, m, deterministic)
}
func (m *InvokeFunctionOnce) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InvokeFunctionOnce.Merge(m, src)
}
func (m *InvokeFunctionOnce) XXX_Size() int {
	return xxx_messageInfo_InvokeFunctionOnce.Size(m)
}
func (m *InvokeFunctionOnce) XXX_DiscardUnknown() {
	xxx_messageInfo_InvokeFunctionOnce.DiscardUnknown(m)
}

var xxx_messageInfo_InvokeFunctionOnce proto.InternalMessageInfo

func (m *InvokeFunctionOnce) GetFunctionId() string {
	if m != nil {
		return m.FunctionId
	}
	return ""
}

func (m *InvokeFunctionOnce) GetFunctionTag() string {
	if m != nil {
		return m.FunctionTag
	}
	return ""
}

func (m *InvokeFunctionOnce) GetServiceAccountId() string {
	if m != nil {
		return m.ServiceAccountId
	}
	return ""
}

// A function invocation with retries.
type InvokeFunctionWithRetry struct {
	// ID of the function to invoke.
	FunctionId string `protobuf:"bytes,1,opt,name=function_id,json=functionId,proto3" json:"function_id,omitempty"`
	// Tag of the function version to execute.
	FunctionTag string `protobuf:"bytes,2,opt,name=function_tag,json=functionTag,proto3" json:"function_tag,omitempty"`
	// ID of the service account which has permission to invoke the function.
	ServiceAccountId string `protobuf:"bytes,3,opt,name=service_account_id,json=serviceAccountId,proto3" json:"service_account_id,omitempty"`
	// Retry policy. If the field is not specified, or the value is empty, no retries will be attempted.
	RetrySettings *RetrySettings `protobuf:"bytes,4,opt,name=retry_settings,json=retrySettings,proto3" json:"retry_settings,omitempty"`
	// DLQ policy (no value means discarding a message)
	DeadLetterQueue      *PutQueueMessage `protobuf:"bytes,5,opt,name=dead_letter_queue,json=deadLetterQueue,proto3" json:"dead_letter_queue,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *InvokeFunctionWithRetry) Reset()         { *m = InvokeFunctionWithRetry{} }
func (m *InvokeFunctionWithRetry) String() string { return proto.CompactTextString(m) }
func (*InvokeFunctionWithRetry) ProtoMessage()    {}
func (*InvokeFunctionWithRetry) Descriptor() ([]byte, []int) {
	return fileDescriptor_83d7b339cc811d06, []int{2}
}

func (m *InvokeFunctionWithRetry) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InvokeFunctionWithRetry.Unmarshal(m, b)
}
func (m *InvokeFunctionWithRetry) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InvokeFunctionWithRetry.Marshal(b, m, deterministic)
}
func (m *InvokeFunctionWithRetry) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InvokeFunctionWithRetry.Merge(m, src)
}
func (m *InvokeFunctionWithRetry) XXX_Size() int {
	return xxx_messageInfo_InvokeFunctionWithRetry.Size(m)
}
func (m *InvokeFunctionWithRetry) XXX_DiscardUnknown() {
	xxx_messageInfo_InvokeFunctionWithRetry.DiscardUnknown(m)
}

var xxx_messageInfo_InvokeFunctionWithRetry proto.InternalMessageInfo

func (m *InvokeFunctionWithRetry) GetFunctionId() string {
	if m != nil {
		return m.FunctionId
	}
	return ""
}

func (m *InvokeFunctionWithRetry) GetFunctionTag() string {
	if m != nil {
		return m.FunctionTag
	}
	return ""
}

func (m *InvokeFunctionWithRetry) GetServiceAccountId() string {
	if m != nil {
		return m.ServiceAccountId
	}
	return ""
}

func (m *InvokeFunctionWithRetry) GetRetrySettings() *RetrySettings {
	if m != nil {
		return m.RetrySettings
	}
	return nil
}

func (m *InvokeFunctionWithRetry) GetDeadLetterQueue() *PutQueueMessage {
	if m != nil {
		return m.DeadLetterQueue
	}
	return nil
}

type PutQueueMessage struct {
	// ID of the queue.
	QueueId string `protobuf:"bytes,11,opt,name=queue_id,json=queueId,proto3" json:"queue_id,omitempty"`
	// SA which has write permission on the queue.
	ServiceAccountId     string   `protobuf:"bytes,2,opt,name=service_account_id,json=serviceAccountId,proto3" json:"service_account_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PutQueueMessage) Reset()         { *m = PutQueueMessage{} }
func (m *PutQueueMessage) String() string { return proto.CompactTextString(m) }
func (*PutQueueMessage) ProtoMessage()    {}
func (*PutQueueMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_83d7b339cc811d06, []int{3}
}

func (m *PutQueueMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PutQueueMessage.Unmarshal(m, b)
}
func (m *PutQueueMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PutQueueMessage.Marshal(b, m, deterministic)
}
func (m *PutQueueMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PutQueueMessage.Merge(m, src)
}
func (m *PutQueueMessage) XXX_Size() int {
	return xxx_messageInfo_PutQueueMessage.Size(m)
}
func (m *PutQueueMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_PutQueueMessage.DiscardUnknown(m)
}

var xxx_messageInfo_PutQueueMessage proto.InternalMessageInfo

func (m *PutQueueMessage) GetQueueId() string {
	if m != nil {
		return m.QueueId
	}
	return ""
}

func (m *PutQueueMessage) GetServiceAccountId() string {
	if m != nil {
		return m.ServiceAccountId
	}
	return ""
}

// Settings for batch processing of messages in a queue.
type BatchSettings struct {
	// Batch size. Trigger will send the batch of messages to the associated function
	// when the number of messages in the queue reaches this value, or the [cutoff] time has passed.
	Size int64 `protobuf:"varint,1,opt,name=size,proto3" json:"size,omitempty"`
	// Maximum wait time. Trigger will send the batch of messages the time since the last batch
	// exceeds the `cutoff` value, regardless of the amount of messages in the queue.
	Cutoff               *duration.Duration `protobuf:"bytes,2,opt,name=cutoff,proto3" json:"cutoff,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *BatchSettings) Reset()         { *m = BatchSettings{} }
func (m *BatchSettings) String() string { return proto.CompactTextString(m) }
func (*BatchSettings) ProtoMessage()    {}
func (*BatchSettings) Descriptor() ([]byte, []int) {
	return fileDescriptor_83d7b339cc811d06, []int{4}
}

func (m *BatchSettings) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BatchSettings.Unmarshal(m, b)
}
func (m *BatchSettings) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BatchSettings.Marshal(b, m, deterministic)
}
func (m *BatchSettings) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BatchSettings.Merge(m, src)
}
func (m *BatchSettings) XXX_Size() int {
	return xxx_messageInfo_BatchSettings.Size(m)
}
func (m *BatchSettings) XXX_DiscardUnknown() {
	xxx_messageInfo_BatchSettings.DiscardUnknown(m)
}

var xxx_messageInfo_BatchSettings proto.InternalMessageInfo

func (m *BatchSettings) GetSize() int64 {
	if m != nil {
		return m.Size
	}
	return 0
}

func (m *BatchSettings) GetCutoff() *duration.Duration {
	if m != nil {
		return m.Cutoff
	}
	return nil
}

type CloudLogsBatchSettings struct {
	// Batch size. Trigger will send the batch of messages to the associated function
	// when the number of log events reaches this value, or the [cutoff] time has passed.
	Size int64 `protobuf:"varint,1,opt,name=size,proto3" json:"size,omitempty"`
	// Maximum wait time. Trigger will send the batch of messages the time since the last batch
	// exceeds the `cutoff` value, regardless of the amount of log events.
	Cutoff               *duration.Duration `protobuf:"bytes,2,opt,name=cutoff,proto3" json:"cutoff,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *CloudLogsBatchSettings) Reset()         { *m = CloudLogsBatchSettings{} }
func (m *CloudLogsBatchSettings) String() string { return proto.CompactTextString(m) }
func (*CloudLogsBatchSettings) ProtoMessage()    {}
func (*CloudLogsBatchSettings) Descriptor() ([]byte, []int) {
	return fileDescriptor_83d7b339cc811d06, []int{5}
}

func (m *CloudLogsBatchSettings) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CloudLogsBatchSettings.Unmarshal(m, b)
}
func (m *CloudLogsBatchSettings) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CloudLogsBatchSettings.Marshal(b, m, deterministic)
}
func (m *CloudLogsBatchSettings) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CloudLogsBatchSettings.Merge(m, src)
}
func (m *CloudLogsBatchSettings) XXX_Size() int {
	return xxx_messageInfo_CloudLogsBatchSettings.Size(m)
}
func (m *CloudLogsBatchSettings) XXX_DiscardUnknown() {
	xxx_messageInfo_CloudLogsBatchSettings.DiscardUnknown(m)
}

var xxx_messageInfo_CloudLogsBatchSettings proto.InternalMessageInfo

func (m *CloudLogsBatchSettings) GetSize() int64 {
	if m != nil {
		return m.Size
	}
	return 0
}

func (m *CloudLogsBatchSettings) GetCutoff() *duration.Duration {
	if m != nil {
		return m.Cutoff
	}
	return nil
}

// Settings for retrying to invoke a function.
type RetrySettings struct {
	// Maximum number of retries (extra invokes) before the action is considered failed.
	RetryAttempts int64 `protobuf:"varint,1,opt,name=retry_attempts,json=retryAttempts,proto3" json:"retry_attempts,omitempty"`
	// Time in seconds to wait between individual retries.
	Interval             *duration.Duration `protobuf:"bytes,2,opt,name=interval,proto3" json:"interval,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *RetrySettings) Reset()         { *m = RetrySettings{} }
func (m *RetrySettings) String() string { return proto.CompactTextString(m) }
func (*RetrySettings) ProtoMessage()    {}
func (*RetrySettings) Descriptor() ([]byte, []int) {
	return fileDescriptor_83d7b339cc811d06, []int{6}
}

func (m *RetrySettings) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RetrySettings.Unmarshal(m, b)
}
func (m *RetrySettings) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RetrySettings.Marshal(b, m, deterministic)
}
func (m *RetrySettings) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RetrySettings.Merge(m, src)
}
func (m *RetrySettings) XXX_Size() int {
	return xxx_messageInfo_RetrySettings.Size(m)
}
func (m *RetrySettings) XXX_DiscardUnknown() {
	xxx_messageInfo_RetrySettings.DiscardUnknown(m)
}

var xxx_messageInfo_RetrySettings proto.InternalMessageInfo

func (m *RetrySettings) GetRetryAttempts() int64 {
	if m != nil {
		return m.RetryAttempts
	}
	return 0
}

func (m *RetrySettings) GetInterval() *duration.Duration {
	if m != nil {
		return m.Interval
	}
	return nil
}

func init() {
	proto.RegisterEnum("yandex.cloud.serverless.triggers.v1.TriggerType", TriggerType_name, TriggerType_value)
	proto.RegisterEnum("yandex.cloud.serverless.triggers.v1.Trigger_ObjectStorageEventType", Trigger_ObjectStorageEventType_name, Trigger_ObjectStorageEventType_value)
	proto.RegisterEnum("yandex.cloud.serverless.triggers.v1.Trigger_ContainerRegistryEventType", Trigger_ContainerRegistryEventType_name, Trigger_ContainerRegistryEventType_value)
	proto.RegisterEnum("yandex.cloud.serverless.triggers.v1.Trigger_Status", Trigger_Status_name, Trigger_Status_value)
	proto.RegisterType((*Trigger)(nil), "yandex.cloud.serverless.triggers.v1.Trigger")
	proto.RegisterMapType((map[string]string)(nil), "yandex.cloud.serverless.triggers.v1.Trigger.LabelsEntry")
	proto.RegisterType((*Trigger_Rule)(nil), "yandex.cloud.serverless.triggers.v1.Trigger.Rule")
	proto.RegisterType((*Trigger_Timer)(nil), "yandex.cloud.serverless.triggers.v1.Trigger.Timer")
	proto.RegisterType((*Trigger_MessageQueue)(nil), "yandex.cloud.serverless.triggers.v1.Trigger.MessageQueue")
	proto.RegisterType((*Trigger_IoTMessage)(nil), "yandex.cloud.serverless.triggers.v1.Trigger.IoTMessage")
	proto.RegisterType((*Trigger_ObjectStorage)(nil), "yandex.cloud.serverless.triggers.v1.Trigger.ObjectStorage")
	proto.RegisterType((*Trigger_ContainerRegistry)(nil), "yandex.cloud.serverless.triggers.v1.Trigger.ContainerRegistry")
	proto.RegisterType((*Trigger_CloudLogs)(nil), "yandex.cloud.serverless.triggers.v1.Trigger.CloudLogs")
	proto.RegisterType((*InvokeFunctionOnce)(nil), "yandex.cloud.serverless.triggers.v1.InvokeFunctionOnce")
	proto.RegisterType((*InvokeFunctionWithRetry)(nil), "yandex.cloud.serverless.triggers.v1.InvokeFunctionWithRetry")
	proto.RegisterType((*PutQueueMessage)(nil), "yandex.cloud.serverless.triggers.v1.PutQueueMessage")
	proto.RegisterType((*BatchSettings)(nil), "yandex.cloud.serverless.triggers.v1.BatchSettings")
	proto.RegisterType((*CloudLogsBatchSettings)(nil), "yandex.cloud.serverless.triggers.v1.CloudLogsBatchSettings")
	proto.RegisterType((*RetrySettings)(nil), "yandex.cloud.serverless.triggers.v1.RetrySettings")
}

func init() {
	proto.RegisterFile("yandex/cloud/serverless/triggers/v1/trigger.proto", fileDescriptor_83d7b339cc811d06)
}

var fileDescriptor_83d7b339cc811d06 = []byte{
	// 1639 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xc4, 0x58, 0x5b, 0x73, 0xdb, 0xc6,
	0x15, 0x16, 0xc1, 0x8b, 0xc4, 0x43, 0x91, 0xa2, 0x76, 0x3a, 0x0e, 0xa3, 0xc4, 0xb5, 0xca, 0x4e,
	0x26, 0x72, 0x52, 0x52, 0x02, 0x5d, 0x3b, 0xbe, 0x25, 0x33, 0xa4, 0x84, 0x50, 0x48, 0x64, 0x49,
	0x59, 0x42, 0xc9, 0x38, 0x2f, 0x08, 0x08, 0xac, 0x20, 0xc4, 0x20, 0xc0, 0x00, 0x0b, 0xd6, 0x6a,
	0xfa, 0xd4, 0xc7, 0x3c, 0x75, 0xa6, 0x97, 0xdf, 0xd1, 0x1f, 0xd0, 0x87, 0xe6, 0xc9, 0x9e, 0xce,
	0xb4, 0x8f, 0xfd, 0x0d, 0xf9, 0x0d, 0x7e, 0xea, 0xec, 0x05, 0x34, 0xa9, 0x9b, 0x49, 0x67, 0xa6,
	0x7e, 0xc3, 0x9e, 0x3d, 0xe7, 0x3b, 0x67, 0xcf, 0x39, 0xfb, 0xed, 0x21, 0x41, 0x3d, 0xb5, 0x02,
	0x87, 0x3c, 0xdd, 0xb4, 0xfd, 0x30, 0x71, 0x36, 0x63, 0x12, 0x8d, 0x48, 0xe4, 0x93, 0x38, 0xde,
	0xa4, 0x91, 0xe7, 0xba, 0x24, 0x8a, 0x37, 0x47, 0x6a, 0xfa, 0xdd, 0x1c, 0x46, 0x21, 0x0d, 0xd1,
	0xaf, 0x85, 0x49, 0x93, 0x9b, 0x34, 0x5f, 0x9a, 0x34, 0x53, 0x93, 0xe6, 0x48, 0x5d, 0xfb, 0xa5,
	0x1b, 0x86, 0xae, 0x4f, 0x36, 0xb9, 0x49, 0x3f, 0x39, 0xde, 0x74, 0x92, 0xc8, 0xa2, 0x5e, 0x18,
	0x08, 0x90, 0xb5, 0x1b, 0x67, 0xf7, 0xa9, 0x37, 0x20, 0x31, 0xb5, 0x06, 0x43, 0xa9, 0x70, 0x7d,
	0x2a, 0xb0, 0x91, 0xe5, 0x7b, 0xce, 0x84, 0x7d, 0xfd, 0x1f, 0xef, 0xc0, 0xa2, 0x21, 0xfc, 0xa1,
	0x0a, 0x28, 0x9e, 0x53, 0xcb, 0xac, 0x67, 0x36, 0x8a, 0x58, 0xf1, 0x1c, 0x74, 0x13, 0x8a, 0xc7,
	0xa1, 0xef, 0x90, 0xc8, 0xf4, 0x9c, 0x9a, 0xc2, 0xc4, 0x9d, 0xe5, 0x9f, 0x9e, 0xa9, 0x99, 0x1f,
	0x9e, 0xab, 0xb9, 0x87, 0x1f, 0xdf, 0xde, 0xc2, 0x4b, 0x62, 0x5b, 0x77, 0xd0, 0x3d, 0x00, 0x3b,
	0x22, 0x16, 0x25, 0x8e, 0x69, 0xd1, 0x5a, 0x76, 0x3d, 0xb3, 0x51, 0x6a, 0xad, 0x35, 0x45, 0x6c,
	0xcd, 0x34, 0xb6, 0xa6, 0x91, 0xc6, 0x86, 0x8b, 0x52, 0xbb, 0x4d, 0xd1, 0xbb, 0x90, 0x0b, 0xac,
	0x01, 0xa9, 0xe5, 0xb8, 0x83, 0x25, 0x06, 0x7e, 0xab, 0x71, 0xe7, 0x16, 0xe6, 0x52, 0xf4, 0x21,
	0x94, 0x1c, 0x12, 0xdb, 0x91, 0x37, 0x64, 0x41, 0xd7, 0xf2, 0x5c, 0xa9, 0xf8, 0xc3, 0x73, 0x35,
	0xbf, 0xd5, 0x68, 0xdd, 0xbe, 0x83, 0x27, 0x77, 0xd1, 0x21, 0x14, 0x7c, 0xab, 0x4f, 0xfc, 0xb8,
	0x56, 0x58, 0xcf, 0x6e, 0x94, 0x5a, 0x77, 0x9b, 0x33, 0xa4, 0xb8, 0x29, 0x8f, 0xdf, 0xdc, 0xe3,
	0xa6, 0x5a, 0x40, 0xa3, 0x53, 0x2c, 0x71, 0xd0, 0xe7, 0x90, 0x8b, 0x12, 0x9f, 0xd4, 0x96, 0xf8,
	0x89, 0xd4, 0xb9, 0xf0, 0x70, 0xe2, 0x93, 0x4e, 0x8e, 0x25, 0x0c, 0x73, 0x10, 0xf4, 0x39, 0x14,
	0x62, 0x6a, 0xd1, 0x24, 0xae, 0x15, 0xd7, 0x33, 0x1b, 0x95, 0xd6, 0xad, 0xb9, 0xe0, 0x7a, 0xdc,
	0x14, 0x4b, 0x88, 0xb5, 0x7b, 0x50, 0x9a, 0x08, 0x18, 0x55, 0x21, 0xfb, 0x84, 0x9c, 0xca, 0xe2,
	0xb1, 0x4f, 0xf4, 0x0b, 0xc8, 0x8f, 0x2c, 0x3f, 0x21, 0xa2, 0x72, 0x58, 0x2c, 0xee, 0x2b, 0x77,
	0x33, 0x6b, 0xff, 0xce, 0x41, 0x8e, 0x05, 0x87, 0x3e, 0x83, 0x3c, 0x6b, 0x97, 0x88, 0xab, 0x94,
	0x5a, 0xad, 0xb9, 0xe2, 0x61, 0xc5, 0x8c, 0x76, 0x17, 0xb0, 0x80, 0x40, 0xdf, 0x40, 0x79, 0x40,
	0xe2, 0xd8, 0x72, 0x89, 0xf9, 0x5d, 0x42, 0x12, 0x22, 0x9b, 0xe0, 0xde, 0x5c, 0x98, 0x8f, 0x04,
	0xc2, 0x17, 0x0c, 0x60, 0x77, 0x01, 0x2f, 0x0f, 0x26, 0xd6, 0xe8, 0x6b, 0x28, 0x79, 0x21, 0x35,
	0xa5, 0x8c, 0xf7, 0x4b, 0xa9, 0xf5, 0xd1, 0x5c, 0xf8, 0x7a, 0x68, 0x48, 0x17, 0xbb, 0x0b, 0x18,
	0xbc, 0x90, 0xca, 0x15, 0xb2, 0xa1, 0x12, 0xf6, 0xbf, 0x25, 0x36, 0x35, 0x63, 0x1a, 0x46, 0x0c,
	0x3e, 0xcf, 0xe1, 0xef, 0xcf, 0x05, 0x7f, 0xc0, 0x21, 0x7a, 0x02, 0x61, 0x77, 0x01, 0x97, 0xc3,
	0x49, 0x01, 0x0a, 0x01, 0xd9, 0x61, 0x40, 0x2d, 0x2f, 0x20, 0x91, 0x19, 0x11, 0xd7, 0x8b, 0x69,
	0x74, 0x5a, 0x2b, 0x70, 0x47, 0x9f, 0xcc, 0xe5, 0x68, 0x3b, 0x85, 0xc1, 0x12, 0x65, 0x77, 0x01,
	0xaf, 0xda, 0x67, 0x85, 0xe8, 0x2b, 0x00, 0x0e, 0x67, 0xfa, 0xa1, 0x2b, 0x9a, 0xae, 0xd4, 0xba,
	0x33, 0x9f, 0x23, 0xa6, 0xb4, 0x17, 0xba, 0xf1, 0xee, 0x02, 0x2e, 0xda, 0xe9, 0xa2, 0xb3, 0x2c,
	0xae, 0x05, 0xca, 0xfd, 0xf3, 0x47, 0x35, 0xb3, 0xf6, 0x77, 0x05, 0xf2, 0xbc, 0x1b, 0xd0, 0x1d,
	0x58, 0xb1, 0xa3, 0x30, 0x30, 0xc9, 0xd3, 0x61, 0x44, 0xe2, 0x98, 0xdd, 0x58, 0xde, 0x91, 0x9d,
	0xb2, 0xe4, 0x8d, 0xfc, 0xc3, 0x8f, 0xd5, 0xad, 0x2d, 0x5c, 0x61, 0x5a, 0xda, 0x58, 0x09, 0xf5,
	0x61, 0xc5, 0x0b, 0x46, 0xe1, 0x13, 0x62, 0x1e, 0x27, 0x81, 0xcd, 0x6f, 0x3a, 0x99, 0xa3, 0xbc,
	0x3a, 0xb7, 0xfd, 0x54, 0x9a, 0x1e, 0x04, 0x36, 0x4b, 0x7e, 0xc5, 0x9b, 0x92, 0xa2, 0xef, 0x61,
	0xed, 0x8c, 0x0f, 0xf3, 0x77, 0x1e, 0x3d, 0x31, 0x23, 0xc2, 0xaa, 0xe0, 0x72, 0x77, 0x0f, 0x5f,
	0xc3, 0xdd, 0x57, 0x1e, 0x3d, 0xc1, 0x44, 0xd4, 0xe0, 0x2d, 0xef, 0xe2, 0xad, 0x4e, 0x05, 0x0a,
	0x96, 0x08, 0x43, 0xa4, 0xec, 0xaf, 0x59, 0x58, 0x9e, 0x6c, 0x76, 0x74, 0x03, 0x96, 0xf8, 0xb5,
	0x61, 0x54, 0x5b, 0xe2, 0x29, 0x13, 0xcc, 0xb1, 0xc8, 0xa5, 0xba, 0x83, 0xee, 0x03, 0x62, 0xe1,
	0x78, 0x36, 0x31, 0x2d, 0xdb, 0x0e, 0x93, 0x80, 0x32, 0xd5, 0xec, 0x05, 0xac, 0x5c, 0x95, 0x7a,
	0x6d, 0xa1, 0xa6, 0x3b, 0xc8, 0x84, 0x4a, 0xdf, 0xa2, 0xf6, 0x89, 0x19, 0x13, 0x4a, 0xbd, 0xc0,
	0x8d, 0xe5, 0xe5, 0x99, 0xed, 0xc2, 0x77, 0x98, 0x69, 0x4f, 0x5a, 0xca, 0xb0, 0xca, 0xfd, 0x49,
	0x21, 0xea, 0x01, 0x1a, 0x79, 0xb1, 0xd7, 0xf7, 0x7c, 0x8f, 0x9e, 0x9a, 0x8c, 0x10, 0xc2, 0x84,
	0xca, 0x2b, 0xf4, 0xf6, 0xb9, 0x67, 0x60, 0x47, 0x3e, 0x61, 0x9d, 0xe2, 0x8b, 0x67, 0xbc, 0x23,
	0x5a, 0x27, 0x78, 0xf5, 0xa5, 0xbd, 0x21, 0xcc, 0xff, 0x1f, 0x4d, 0x71, 0xae, 0x2e, 0x3f, 0x65,
	0x00, 0x5e, 0x92, 0x04, 0x7a, 0x0f, 0x4a, 0xe9, 0x3d, 0x35, 0xd3, 0xa7, 0x51, 0x66, 0x00, 0xd2,
	0x0d, 0xdd, 0x41, 0xef, 0x40, 0xd1, 0x21, 0xbc, 0x34, 0xe9, 0x43, 0x89, 0x97, 0x84, 0x40, 0x77,
	0xd0, 0x75, 0x80, 0xc1, 0x77, 0x94, 0x9a, 0x34, 0x1c, 0x7a, 0xb6, 0x28, 0x18, 0x2e, 0x32, 0x89,
	0xc1, 0x04, 0xc8, 0xbd, 0xec, 0x94, 0x3f, 0xb7, 0x17, 0x5f, 0x75, 0xd4, 0x1f, 0x15, 0x28, 0x4f,
	0x11, 0x16, 0xfa, 0x16, 0x80, 0x8c, 0x48, 0x40, 0x4d, 0x7a, 0x3a, 0x64, 0xfc, 0x9d, 0xdd, 0xa8,
	0xb4, 0xb6, 0x5f, 0x9f, 0x00, 0x35, 0x86, 0x65, 0x9c, 0x0e, 0x49, 0xa7, 0xf0, 0xc7, 0xe7, 0xaa,
	0xf2, 0xc9, 0x16, 0x2e, 0x92, 0x54, 0xc4, 0x52, 0xd6, 0x4f, 0xec, 0x27, 0x84, 0x77, 0x71, 0x4e,
	0xa4, 0x4c, 0x08, 0x74, 0x07, 0x5d, 0x83, 0xc2, 0x30, 0x22, 0xc7, 0xde, 0x53, 0x4e, 0x8e, 0x45,
	0x2c, 0x57, 0x4c, 0x1e, 0x27, 0xc7, 0x4c, 0xbe, 0x28, 0xe4, 0x62, 0xf5, 0xe6, 0x72, 0xf8, 0x1f,
	0x05, 0x56, 0xcf, 0x71, 0x31, 0x0a, 0x2e, 0xc8, 0x63, 0xf7, 0xe7, 0xf1, 0xfb, 0x95, 0xb9, 0xbc,
	0x31, 0xdd, 0xa5, 0x22, 0x9b, 0x93, 0xfd, 0x79, 0x1d, 0xc0, 0x1b, 0xb0, 0x97, 0x99, 0x0f, 0x5a,
	0x79, 0xd1, 0x82, 0x5c, 0xb2, 0xcf, 0x66, 0xac, 0x2a, 0x64, 0xa9, 0xe5, 0xca, 0x5c, 0xb3, 0xcf,
	0x37, 0x97, 0xd0, 0x3f, 0x29, 0x50, 0x1c, 0xbf, 0x39, 0x68, 0x1d, 0x96, 0xfd, 0xd0, 0x35, 0xdd,
	0x28, 0x4c, 0x86, 0xe2, 0xfe, 0x65, 0xd9, 0xc9, 0xfc, 0xd0, 0xed, 0x32, 0x91, 0xee, 0xa0, 0x93,
	0x73, 0xcc, 0x26, 0x46, 0x99, 0x07, 0x33, 0xc5, 0x39, 0xf6, 0x34, 0x03, 0xc5, 0xbd, 0xa9, 0x94,
	0xd4, 0xff, 0x95, 0x81, 0x6b, 0x17, 0xdf, 0x2b, 0x74, 0x13, 0xde, 0x3b, 0xe8, 0x7c, 0xa6, 0x6d,
	0x1b, 0x66, 0xcf, 0x38, 0xc0, 0xed, 0xae, 0x66, 0x6a, 0x5f, 0x6a, 0xfb, 0x86, 0x69, 0x3c, 0x3e,
	0xd4, 0xcc, 0xa3, 0xfd, 0xde, 0xa1, 0xb6, 0xad, 0x7f, 0xaa, 0x6b, 0x3b, 0xd5, 0x05, 0xf4, 0x21,
	0xbc, 0x7f, 0xb9, 0xea, 0x36, 0xd6, 0xda, 0x86, 0x66, 0x0a, 0x85, 0x6a, 0xe6, 0x6a, 0xe5, 0xa3,
	0xc3, 0x9d, 0x09, 0x65, 0xe5, 0x6a, 0xe5, 0x1d, 0x6d, 0x4f, 0x7b, 0xa9, 0x9c, 0xad, 0xff, 0x59,
	0x81, 0xb5, 0xcb, 0x9b, 0x1b, 0x35, 0xe0, 0xe6, 0xf6, 0xc1, 0xbe, 0xd1, 0xd6, 0xf7, 0x35, 0x6c,
	0x62, 0xad, 0xab, 0xf7, 0x0c, 0xfc, 0xf8, 0xf2, 0x43, 0x35, 0xe1, 0x83, 0xab, 0xd5, 0xe5, 0xc1,
	0xf4, 0x47, 0xed, 0xae, 0x56, 0xcd, 0xbc, 0x5a, 0x5f, 0x86, 0x2b, 0xf4, 0x15, 0xd4, 0x82, 0xe6,
	0xec, 0xf8, 0xa6, 0xd1, 0xee, 0x56, 0xb3, 0xaf, 0xb6, 0x99, 0xf4, 0xc1, 0x6d, 0x72, 0xf5, 0xbb,
	0x50, 0x10, 0xd3, 0x3d, 0xba, 0x06, 0xa8, 0x67, 0xb4, 0x8d, 0xa3, 0xde, 0x99, 0x93, 0x02, 0x14,
	0xda, 0xdb, 0x86, 0xfe, 0x25, 0x3b, 0x05, 0x40, 0xe1, 0xb0, 0x7d, 0xd4, 0xd3, 0x76, 0xaa, 0x4a,
	0xfd, 0x2f, 0x19, 0x40, 0xe7, 0x1f, 0x3a, 0xd4, 0x80, 0xd2, 0x78, 0xc8, 0x19, 0xbf, 0x5b, 0xd3,
	0x53, 0x02, 0xa4, 0x0a, 0xba, 0x83, 0x7e, 0x05, 0xcb, 0x63, 0x75, 0xc6, 0x04, 0xe2, 0x09, 0x1b,
	0x43, 0x18, 0x96, 0x8b, 0x7e, 0x73, 0xf9, 0xf8, 0x71, 0x7e, 0xe0, 0xa8, 0xff, 0x57, 0x81, 0xb7,
	0x2e, 0xe9, 0xf8, 0x37, 0x1d, 0x1b, 0x7a, 0x0c, 0x15, 0x3e, 0xf2, 0xbd, 0xde, 0x30, 0xc4, 0xcf,
	0x90, 0x92, 0x02, 0x2e, 0x47, 0x93, 0x4b, 0xf4, 0x0d, 0xac, 0x3a, 0xc4, 0x72, 0x4c, 0x9f, 0x50,
	0x4a, 0x22, 0xf9, 0x3b, 0x48, 0x4c, 0x41, 0xbf, 0x9d, 0x09, 0xfd, 0x30, 0xa1, 0x7c, 0x1c, 0x94,
	0xf3, 0x07, 0x5e, 0x61, 0x70, 0x7b, 0x1c, 0x8d, 0xcb, 0xeb, 0x27, 0xb0, 0x72, 0x46, 0x07, 0xbd,
	0x7d, 0x76, 0x72, 0x7c, 0xd5, 0xcc, 0xa8, 0xcc, 0x32, 0x33, 0xd6, 0x8f, 0xa1, 0x3c, 0xc5, 0x8a,
	0xec, 0x77, 0x7a, 0xec, 0xfd, 0x9e, 0xf0, 0x82, 0x65, 0x3b, 0x4b, 0x2f, 0x9e, 0xa9, 0xb9, 0xad,
	0x86, 0xba, 0x85, 0xb9, 0x14, 0x7d, 0x04, 0x05, 0x3b, 0xa1, 0xe1, 0xf1, 0xb1, 0x24, 0xe0, 0x2b,
	0xa6, 0x3e, 0x41, 0xaf, 0x52, 0xbd, 0x9e, 0xc0, 0xb5, 0x8b, 0x69, 0x18, 0x5d, 0x9f, 0x72, 0xc8,
	0x67, 0x45, 0xe6, 0x30, 0xf5, 0xf8, 0x70, 0x76, 0x8f, 0xdc, 0x56, 0x8d, 0x1b, 0xea, 0x60, 0xec,
	0xf6, 0x0f, 0x50, 0x9e, 0x2a, 0x25, 0x6a, 0xa6, 0x6d, 0x61, 0x51, 0x4a, 0x06, 0x43, 0x1a, 0x4b,
	0xbf, 0x8b, 0x2f, 0x9e, 0xa9, 0x59, 0xb5, 0x71, 0x5b, 0xd6, 0xba, 0x2d, 0x77, 0xd1, 0x03, 0x58,
	0xf2, 0x02, 0x4a, 0xa2, 0x91, 0xe5, 0xcf, 0x7a, 0xe4, 0xb1, 0xc1, 0x07, 0x7f, 0xcb, 0x40, 0x49,
	0xbe, 0xf5, 0x9c, 0xf7, 0xde, 0x85, 0x9a, 0x81, 0xf5, 0x6e, 0x57, 0xc3, 0x17, 0xd1, 0x5c, 0x11,
	0xf2, 0x86, 0xfe, 0x48, 0xc3, 0x55, 0x05, 0xad, 0x42, 0xf9, 0x91, 0xd6, 0xeb, 0x31, 0xea, 0xf8,
	0xe2, 0x48, 0x3b, 0xd2, 0xaa, 0x59, 0xb4, 0x02, 0x25, 0xfd, 0xc0, 0x30, 0xa5, 0xb8, 0x9a, 0x43,
	0x08, 0x2a, 0xd3, 0x84, 0x5c, 0xcd, 0x33, 0x5e, 0x39, 0xcf, 0x4a, 0xd5, 0x02, 0xaa, 0x00, 0x6c,
	0xef, 0x1d, 0x1c, 0xed, 0x98, 0x7b, 0x07, 0xdd, 0x5e, 0x75, 0xb1, 0xf3, 0x3d, 0xbc, 0x3f, 0xd5,
	0xa7, 0xd6, 0xd0, 0xbb, 0xa4, 0x57, 0xbf, 0x3e, 0x74, 0x3d, 0x7a, 0x92, 0xf4, 0x9b, 0x76, 0x38,
	0xd8, 0x14, 0x36, 0x0d, 0xf1, 0x1f, 0x93, 0x1b, 0x36, 0x5c, 0x12, 0xf0, 0x24, 0x6c, 0xce, 0xf0,
	0xaf, 0xd8, 0x83, 0xf4, 0xbb, 0x5f, 0xe0, 0x36, 0xb7, 0xfe, 0x17, 0x00, 0x00, 0xff, 0xff, 0xb2,
	0xc5, 0x36, 0xda, 0x4c, 0x13, 0x00, 0x00,
}
