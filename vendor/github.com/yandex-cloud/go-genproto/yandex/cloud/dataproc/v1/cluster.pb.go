// Code generated by protoc-gen-go. DO NOT EDIT.
// source: yandex/cloud/dataproc/v1/cluster.proto

package dataproc

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	_ "github.com/yandex-cloud/go-genproto/yandex/cloud"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Cluster_Status int32

const (
	// Cluster state is unknown.
	Cluster_STATUS_UNKNOWN Cluster_Status = 0
	// Cluster is being created.
	Cluster_CREATING Cluster_Status = 1
	// Cluster is running normally.
	Cluster_RUNNING Cluster_Status = 2
	// Cluster encountered a problem and cannot operate.
	Cluster_ERROR Cluster_Status = 3
	// Cluster is stopping.
	Cluster_STOPPING Cluster_Status = 4
	// Cluster stopped.
	Cluster_STOPPED Cluster_Status = 5
	// Cluster is starting.
	Cluster_STARTING Cluster_Status = 6
)

var Cluster_Status_name = map[int32]string{
	0: "STATUS_UNKNOWN",
	1: "CREATING",
	2: "RUNNING",
	3: "ERROR",
	4: "STOPPING",
	5: "STOPPED",
	6: "STARTING",
}

var Cluster_Status_value = map[string]int32{
	"STATUS_UNKNOWN": 0,
	"CREATING":       1,
	"RUNNING":        2,
	"ERROR":          3,
	"STOPPING":       4,
	"STOPPED":        5,
	"STARTING":       6,
}

func (x Cluster_Status) String() string {
	return proto.EnumName(Cluster_Status_name, int32(x))
}

func (Cluster_Status) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_62f0592e5d92313c, []int{0, 0}
}

type HadoopConfig_Service int32

const (
	HadoopConfig_SERVICE_UNSPECIFIED HadoopConfig_Service = 0
	HadoopConfig_HDFS                HadoopConfig_Service = 1
	HadoopConfig_YARN                HadoopConfig_Service = 2
	HadoopConfig_MAPREDUCE           HadoopConfig_Service = 3
	HadoopConfig_HIVE                HadoopConfig_Service = 4
	HadoopConfig_TEZ                 HadoopConfig_Service = 5
	HadoopConfig_ZOOKEEPER           HadoopConfig_Service = 6
	HadoopConfig_HBASE               HadoopConfig_Service = 7
	HadoopConfig_SQOOP               HadoopConfig_Service = 8
	HadoopConfig_FLUME               HadoopConfig_Service = 9
	HadoopConfig_SPARK               HadoopConfig_Service = 10
	HadoopConfig_ZEPPELIN            HadoopConfig_Service = 11
	HadoopConfig_OOZIE               HadoopConfig_Service = 12
)

var HadoopConfig_Service_name = map[int32]string{
	0:  "SERVICE_UNSPECIFIED",
	1:  "HDFS",
	2:  "YARN",
	3:  "MAPREDUCE",
	4:  "HIVE",
	5:  "TEZ",
	6:  "ZOOKEEPER",
	7:  "HBASE",
	8:  "SQOOP",
	9:  "FLUME",
	10: "SPARK",
	11: "ZEPPELIN",
	12: "OOZIE",
}

var HadoopConfig_Service_value = map[string]int32{
	"SERVICE_UNSPECIFIED": 0,
	"HDFS":                1,
	"YARN":                2,
	"MAPREDUCE":           3,
	"HIVE":                4,
	"TEZ":                 5,
	"ZOOKEEPER":           6,
	"HBASE":               7,
	"SQOOP":               8,
	"FLUME":               9,
	"SPARK":               10,
	"ZEPPELIN":            11,
	"OOZIE":               12,
}

func (x HadoopConfig_Service) String() string {
	return proto.EnumName(HadoopConfig_Service_name, int32(x))
}

func (HadoopConfig_Service) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_62f0592e5d92313c, []int{2, 0}
}

// A Data Proc cluster. For details about the concept, see [documentation](/docs/data-proc/concepts/).
type Cluster struct {
	// ID of the cluster. Generated at creation time.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// ID of the folder that the cluster belongs to.
	FolderId string `protobuf:"bytes,2,opt,name=folder_id,json=folderId,proto3" json:"folder_id,omitempty"`
	// Creation timestamp.
	CreatedAt *timestamp.Timestamp `protobuf:"bytes,3,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	// Name of the cluster. The name is unique within the folder.
	Name string `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	// Description of the cluster.
	Description string `protobuf:"bytes,5,opt,name=description,proto3" json:"description,omitempty"`
	// Cluster labels as `key:value` pairs.
	Labels map[string]string `protobuf:"bytes,6,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// Monitoring systems relevant to the cluster.
	Monitoring []*Monitoring `protobuf:"bytes,7,rep,name=monitoring,proto3" json:"monitoring,omitempty"`
	// Configuration of the cluster.
	Config *ClusterConfig `protobuf:"bytes,8,opt,name=config,proto3" json:"config,omitempty"`
	// Aggregated cluster health.
	Health Health `protobuf:"varint,9,opt,name=health,proto3,enum=yandex.cloud.dataproc.v1.Health" json:"health,omitempty"`
	// Cluster status.
	Status Cluster_Status `protobuf:"varint,10,opt,name=status,proto3,enum=yandex.cloud.dataproc.v1.Cluster_Status" json:"status,omitempty"`
	// ID of the availability zone where the cluster resides.
	ZoneId string `protobuf:"bytes,11,opt,name=zone_id,json=zoneId,proto3" json:"zone_id,omitempty"`
	// ID of service account for the Data Proc manager agent.
	ServiceAccountId string `protobuf:"bytes,12,opt,name=service_account_id,json=serviceAccountId,proto3" json:"service_account_id,omitempty"`
	// Object Storage bucket to be used for Data Proc jobs that are run in the cluster.
	Bucket string `protobuf:"bytes,13,opt,name=bucket,proto3" json:"bucket,omitempty"`
	// Whether UI Proxy feature is enabled.
	UiProxy              bool     `protobuf:"varint,14,opt,name=ui_proxy,json=uiProxy,proto3" json:"ui_proxy,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Cluster) Reset()         { *m = Cluster{} }
func (m *Cluster) String() string { return proto.CompactTextString(m) }
func (*Cluster) ProtoMessage()    {}
func (*Cluster) Descriptor() ([]byte, []int) {
	return fileDescriptor_62f0592e5d92313c, []int{0}
}

func (m *Cluster) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Cluster.Unmarshal(m, b)
}
func (m *Cluster) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Cluster.Marshal(b, m, deterministic)
}
func (m *Cluster) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Cluster.Merge(m, src)
}
func (m *Cluster) XXX_Size() int {
	return xxx_messageInfo_Cluster.Size(m)
}
func (m *Cluster) XXX_DiscardUnknown() {
	xxx_messageInfo_Cluster.DiscardUnknown(m)
}

var xxx_messageInfo_Cluster proto.InternalMessageInfo

func (m *Cluster) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Cluster) GetFolderId() string {
	if m != nil {
		return m.FolderId
	}
	return ""
}

func (m *Cluster) GetCreatedAt() *timestamp.Timestamp {
	if m != nil {
		return m.CreatedAt
	}
	return nil
}

func (m *Cluster) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Cluster) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Cluster) GetLabels() map[string]string {
	if m != nil {
		return m.Labels
	}
	return nil
}

func (m *Cluster) GetMonitoring() []*Monitoring {
	if m != nil {
		return m.Monitoring
	}
	return nil
}

func (m *Cluster) GetConfig() *ClusterConfig {
	if m != nil {
		return m.Config
	}
	return nil
}

func (m *Cluster) GetHealth() Health {
	if m != nil {
		return m.Health
	}
	return Health_HEALTH_UNKNOWN
}

func (m *Cluster) GetStatus() Cluster_Status {
	if m != nil {
		return m.Status
	}
	return Cluster_STATUS_UNKNOWN
}

func (m *Cluster) GetZoneId() string {
	if m != nil {
		return m.ZoneId
	}
	return ""
}

func (m *Cluster) GetServiceAccountId() string {
	if m != nil {
		return m.ServiceAccountId
	}
	return ""
}

func (m *Cluster) GetBucket() string {
	if m != nil {
		return m.Bucket
	}
	return ""
}

func (m *Cluster) GetUiProxy() bool {
	if m != nil {
		return m.UiProxy
	}
	return false
}

// Metadata of a monitoring system for a Data Proc cluster.
type Monitoring struct {
	// Name of the monitoring system.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Description of the monitoring system.
	Description string `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	// Link to the monitoring system.
	Link                 string   `protobuf:"bytes,3,opt,name=link,proto3" json:"link,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Monitoring) Reset()         { *m = Monitoring{} }
func (m *Monitoring) String() string { return proto.CompactTextString(m) }
func (*Monitoring) ProtoMessage()    {}
func (*Monitoring) Descriptor() ([]byte, []int) {
	return fileDescriptor_62f0592e5d92313c, []int{1}
}

func (m *Monitoring) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Monitoring.Unmarshal(m, b)
}
func (m *Monitoring) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Monitoring.Marshal(b, m, deterministic)
}
func (m *Monitoring) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Monitoring.Merge(m, src)
}
func (m *Monitoring) XXX_Size() int {
	return xxx_messageInfo_Monitoring.Size(m)
}
func (m *Monitoring) XXX_DiscardUnknown() {
	xxx_messageInfo_Monitoring.DiscardUnknown(m)
}

var xxx_messageInfo_Monitoring proto.InternalMessageInfo

func (m *Monitoring) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Monitoring) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Monitoring) GetLink() string {
	if m != nil {
		return m.Link
	}
	return ""
}

// Hadoop configuration that describes services installed in a cluster,
// their properties and settings.
type HadoopConfig struct {
	// Set of services used in the cluster (if empty, the default set is used).
	Services []HadoopConfig_Service `protobuf:"varint,1,rep,packed,name=services,proto3,enum=yandex.cloud.dataproc.v1.HadoopConfig_Service" json:"services,omitempty"`
	// Properties set for all hosts in `*-site.xml` configurations. The key should indicate
	// the service and the property.
	//
	// For example, use the key 'hdfs:dfs.replication' to set the `dfs.replication` property
	// in the file `/etc/hadoop/conf/hdfs-site.xml`.
	Properties map[string]string `protobuf:"bytes,2,rep,name=properties,proto3" json:"properties,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// List of public SSH keys to access to cluster hosts.
	SshPublicKeys        []string `protobuf:"bytes,3,rep,name=ssh_public_keys,json=sshPublicKeys,proto3" json:"ssh_public_keys,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HadoopConfig) Reset()         { *m = HadoopConfig{} }
func (m *HadoopConfig) String() string { return proto.CompactTextString(m) }
func (*HadoopConfig) ProtoMessage()    {}
func (*HadoopConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_62f0592e5d92313c, []int{2}
}

func (m *HadoopConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HadoopConfig.Unmarshal(m, b)
}
func (m *HadoopConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HadoopConfig.Marshal(b, m, deterministic)
}
func (m *HadoopConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HadoopConfig.Merge(m, src)
}
func (m *HadoopConfig) XXX_Size() int {
	return xxx_messageInfo_HadoopConfig.Size(m)
}
func (m *HadoopConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_HadoopConfig.DiscardUnknown(m)
}

var xxx_messageInfo_HadoopConfig proto.InternalMessageInfo

func (m *HadoopConfig) GetServices() []HadoopConfig_Service {
	if m != nil {
		return m.Services
	}
	return nil
}

func (m *HadoopConfig) GetProperties() map[string]string {
	if m != nil {
		return m.Properties
	}
	return nil
}

func (m *HadoopConfig) GetSshPublicKeys() []string {
	if m != nil {
		return m.SshPublicKeys
	}
	return nil
}

type ClusterConfig struct {
	// Image version for cluster provisioning.
	// All available versions are listed in the [documentation](/docs/managed-hadoop/concepts/image-versions).
	VersionId string `protobuf:"bytes,1,opt,name=version_id,json=versionId,proto3" json:"version_id,omitempty"`
	// Data Proc specific configuration options.
	Hadoop               *HadoopConfig `protobuf:"bytes,2,opt,name=hadoop,proto3" json:"hadoop,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *ClusterConfig) Reset()         { *m = ClusterConfig{} }
func (m *ClusterConfig) String() string { return proto.CompactTextString(m) }
func (*ClusterConfig) ProtoMessage()    {}
func (*ClusterConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_62f0592e5d92313c, []int{3}
}

func (m *ClusterConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ClusterConfig.Unmarshal(m, b)
}
func (m *ClusterConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ClusterConfig.Marshal(b, m, deterministic)
}
func (m *ClusterConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ClusterConfig.Merge(m, src)
}
func (m *ClusterConfig) XXX_Size() int {
	return xxx_messageInfo_ClusterConfig.Size(m)
}
func (m *ClusterConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_ClusterConfig.DiscardUnknown(m)
}

var xxx_messageInfo_ClusterConfig proto.InternalMessageInfo

func (m *ClusterConfig) GetVersionId() string {
	if m != nil {
		return m.VersionId
	}
	return ""
}

func (m *ClusterConfig) GetHadoop() *HadoopConfig {
	if m != nil {
		return m.Hadoop
	}
	return nil
}

func init() {
	proto.RegisterEnum("yandex.cloud.dataproc.v1.Cluster_Status", Cluster_Status_name, Cluster_Status_value)
	proto.RegisterEnum("yandex.cloud.dataproc.v1.HadoopConfig_Service", HadoopConfig_Service_name, HadoopConfig_Service_value)
	proto.RegisterType((*Cluster)(nil), "yandex.cloud.dataproc.v1.Cluster")
	proto.RegisterMapType((map[string]string)(nil), "yandex.cloud.dataproc.v1.Cluster.LabelsEntry")
	proto.RegisterType((*Monitoring)(nil), "yandex.cloud.dataproc.v1.Monitoring")
	proto.RegisterType((*HadoopConfig)(nil), "yandex.cloud.dataproc.v1.HadoopConfig")
	proto.RegisterMapType((map[string]string)(nil), "yandex.cloud.dataproc.v1.HadoopConfig.PropertiesEntry")
	proto.RegisterType((*ClusterConfig)(nil), "yandex.cloud.dataproc.v1.ClusterConfig")
}

func init() {
	proto.RegisterFile("yandex/cloud/dataproc/v1/cluster.proto", fileDescriptor_62f0592e5d92313c)
}

var fileDescriptor_62f0592e5d92313c = []byte{
	// 921 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x95, 0xdd, 0x6e, 0xe3, 0x44,
	0x14, 0xc7, 0xd7, 0x71, 0xe2, 0xd8, 0x27, 0x6d, 0xd7, 0x1a, 0x10, 0x6b, 0xca, 0xae, 0x88, 0x2a,
	0x28, 0x91, 0xa0, 0x0e, 0xc9, 0x42, 0xb5, 0x0b, 0x2c, 0x90, 0xa6, 0x53, 0x6a, 0xda, 0xc6, 0x66,
	0x9c, 0x14, 0xd1, 0x9b, 0xc8, 0xb1, 0xa7, 0x89, 0x55, 0xc7, 0x63, 0xf9, 0x23, 0xda, 0x70, 0xc9,
	0xe5, 0x3e, 0x0b, 0x57, 0x3c, 0x45, 0x1f, 0x0b, 0x79, 0xec, 0x94, 0x04, 0x29, 0xec, 0x72, 0x77,
	0x3e, 0x7e, 0xff, 0xe3, 0x33, 0x73, 0x8e, 0x6d, 0x38, 0x5c, 0x3a, 0xa1, 0x47, 0x5f, 0xb7, 0xdd,
	0x80, 0x65, 0x5e, 0xdb, 0x73, 0x52, 0x27, 0x8a, 0x99, 0xdb, 0x5e, 0x74, 0xda, 0x6e, 0x90, 0x25,
	0x29, 0x8d, 0xf5, 0x28, 0x66, 0x29, 0x43, 0x5a, 0xc1, 0xe9, 0x9c, 0xd3, 0x57, 0x9c, 0xbe, 0xe8,
	0xec, 0x7f, 0x3c, 0x65, 0x6c, 0x1a, 0xd0, 0x36, 0xe7, 0x26, 0xd9, 0x6d, 0x3b, 0xf5, 0xe7, 0x34,
	0x49, 0x9d, 0x79, 0x54, 0x48, 0xf7, 0x3f, 0xdd, 0xfe, 0x08, 0x36, 0x9f, 0xb3, 0xb0, 0xc4, 0x9e,
	0x6d, 0x60, 0x0b, 0x27, 0xf0, 0x3d, 0x27, 0xf5, 0x57, 0xe9, 0x83, 0xbf, 0x24, 0xa8, 0xf7, 0x8b,
	0x96, 0xd0, 0x1e, 0x54, 0x7c, 0x4f, 0x13, 0x9a, 0x42, 0x4b, 0x21, 0x15, 0xdf, 0x43, 0x1f, 0x81,
	0x72, 0xcb, 0x02, 0x8f, 0xc6, 0x63, 0xdf, 0xd3, 0x2a, 0x3c, 0x2c, 0x17, 0x01, 0xc3, 0x43, 0x2f,
	0x01, 0xdc, 0x98, 0x3a, 0x29, 0xf5, 0xc6, 0x4e, 0xaa, 0x89, 0x4d, 0xa1, 0xd5, 0xe8, 0xee, 0xeb,
	0x45, 0xd3, 0xfa, 0xaa, 0x69, 0x7d, 0xb8, 0x6a, 0x9a, 0x28, 0x25, 0xdd, 0x4b, 0xd1, 0x53, 0xa8,
	0x86, 0xce, 0x9c, 0x6a, 0xd5, 0xbc, 0xe4, 0x89, 0xfc, 0xe6, 0xbe, 0x53, 0xed, 0x1c, 0x1d, 0x3f,
	0x27, 0x3c, 0x8a, 0x3e, 0x87, 0x86, 0x47, 0x13, 0x37, 0xf6, 0xa3, 0xbc, 0x4d, 0xad, 0xc6, 0x21,
	0xe5, 0xcd, 0x7d, 0xa7, 0xf6, 0xe5, 0x51, 0xf7, 0xeb, 0x63, 0xb2, 0x9e, 0x45, 0x26, 0x48, 0x81,
	0x33, 0xa1, 0x41, 0xa2, 0x49, 0x4d, 0xb1, 0xd5, 0xe8, 0x1e, 0xe9, 0xdb, 0x2e, 0x54, 0x2f, 0x4f,
	0xa9, 0x5f, 0x72, 0x1e, 0x87, 0x69, 0xbc, 0x3c, 0x91, 0xff, 0xb8, 0xef, 0x54, 0xbf, 0x7b, 0x75,
	0xfc, 0x15, 0x29, 0xcb, 0xa0, 0x53, 0x80, 0x39, 0x0b, 0xfd, 0x94, 0xc5, 0x7e, 0x38, 0xd5, 0xea,
	0xbc, 0xe8, 0x27, 0xdb, 0x8b, 0x5e, 0x3d, 0xb0, 0x64, 0x4d, 0x87, 0x7e, 0x00, 0xc9, 0x65, 0xe1,
	0xad, 0x3f, 0xd5, 0x64, 0x7e, 0x31, 0x9f, 0xbd, 0xb5, 0xad, 0x3e, 0xc7, 0x49, 0x29, 0x43, 0x2f,
	0x40, 0x9a, 0x51, 0x27, 0x48, 0x67, 0x9a, 0xd2, 0x14, 0x5a, 0x7b, 0xdd, 0xe6, 0xf6, 0x02, 0xe7,
	0x9c, 0x23, 0x25, 0x8f, 0x7e, 0x04, 0x29, 0x49, 0x9d, 0x34, 0x4b, 0x34, 0xe0, 0xca, 0xd6, 0xdb,
	0x6f, 0xc4, 0xe6, 0x3c, 0x29, 0x75, 0xe8, 0x09, 0xd4, 0x7f, 0x67, 0x21, 0xcd, 0x87, 0xde, 0xe0,
	0x43, 0x97, 0x72, 0xd7, 0xf0, 0xd0, 0x17, 0x80, 0x12, 0x1a, 0x2f, 0x7c, 0x97, 0x8e, 0x1d, 0xd7,
	0x65, 0x59, 0x98, 0xe6, 0xcc, 0x0e, 0x67, 0xd4, 0x32, 0xd3, 0x2b, 0x12, 0x86, 0x87, 0x3e, 0x00,
	0x69, 0x92, 0xb9, 0x77, 0x34, 0xd5, 0x76, 0x8b, 0x2a, 0x85, 0x87, 0x3e, 0x04, 0x39, 0xf3, 0xc7,
	0x51, 0xcc, 0x5e, 0x2f, 0xb5, 0xbd, 0xa6, 0xd0, 0x92, 0x49, 0x3d, 0xf3, 0xad, 0xdc, 0xdd, 0x7f,
	0x09, 0x8d, 0xb5, 0xe9, 0x20, 0x15, 0xc4, 0x3b, 0xba, 0x2c, 0x17, 0x32, 0x37, 0xd1, 0xfb, 0x50,
	0x5b, 0x38, 0x41, 0x46, 0xcb, 0x6d, 0x2c, 0x9c, 0x6f, 0x2a, 0x2f, 0x84, 0x83, 0x3b, 0x90, 0x8a,
	0x63, 0x20, 0x04, 0x7b, 0xf6, 0xb0, 0x37, 0x1c, 0xd9, 0xe3, 0xd1, 0xe0, 0x62, 0x60, 0xfe, 0x3a,
	0x50, 0x1f, 0xa1, 0x1d, 0x90, 0xfb, 0x04, 0xf7, 0x86, 0xc6, 0xe0, 0x27, 0x55, 0x40, 0x0d, 0xa8,
	0x93, 0xd1, 0x60, 0x90, 0x3b, 0x15, 0xa4, 0x40, 0x0d, 0x13, 0x62, 0x12, 0x55, 0xcc, 0x29, 0x7b,
	0x68, 0x5a, 0x56, 0x9e, 0xa8, 0xe6, 0x14, 0xf7, 0xf0, 0xa9, 0x5a, 0x2b, 0x52, 0x3d, 0xc2, 0x0b,
	0x48, 0x07, 0xd7, 0x00, 0xff, 0x0c, 0x1e, 0xa1, 0x72, 0x9d, 0x8b, 0x3e, 0x8b, 0x25, 0x6e, 0x6e,
	0x2e, 0x71, 0xd1, 0xee, 0xc6, 0xe6, 0x22, 0xa8, 0x06, 0x7e, 0x78, 0xc7, 0xdf, 0x1c, 0x85, 0x70,
	0xfb, 0xe0, 0x5e, 0x84, 0x9d, 0x73, 0xc7, 0x63, 0x2c, 0x2a, 0xd6, 0x01, 0xfd, 0x0c, 0x72, 0x79,
	0xaf, 0x89, 0x26, 0x34, 0xc5, 0xd6, 0x5e, 0x57, 0xff, 0x8f, 0x45, 0x58, 0x53, 0xea, 0x76, 0x21,
	0x23, 0x0f, 0x7a, 0x74, 0x0d, 0x10, 0xc5, 0x2c, 0xa2, 0x71, 0xea, 0xd3, 0x44, 0xab, 0xf0, 0xcd,
	0x3e, 0x7e, 0xc7, 0x6a, 0xd6, 0x83, 0x90, 0x4f, 0x86, 0xac, 0x55, 0x42, 0x87, 0xf0, 0x38, 0x49,
	0x66, 0xe3, 0x28, 0x9b, 0x04, 0xbe, 0x3b, 0xbe, 0xa3, 0xcb, 0x44, 0x13, 0x9b, 0x62, 0x4b, 0x21,
	0xbb, 0x49, 0x32, 0xb3, 0x78, 0xf4, 0x82, 0x2e, 0x93, 0xfd, 0x57, 0xf0, 0xf8, 0x5f, 0x65, 0xfe,
	0xd7, 0x80, 0xff, 0x14, 0xa0, 0x5e, 0x1e, 0x0a, 0x3d, 0x81, 0xf7, 0x6c, 0x4c, 0xae, 0x8d, 0x3e,
	0x1e, 0x8f, 0x06, 0xb6, 0x85, 0xfb, 0xc6, 0x99, 0x81, 0x4f, 0xd5, 0x47, 0x48, 0x86, 0xea, 0xf9,
	0xe9, 0x99, 0xad, 0x0a, 0xb9, 0xf5, 0x5b, 0x8f, 0x0c, 0xd4, 0x0a, 0xda, 0x05, 0xe5, 0xaa, 0x67,
	0x11, 0x7c, 0x3a, 0xea, 0x63, 0x55, 0xe4, 0x88, 0x71, 0x8d, 0xd5, 0x2a, 0xaa, 0x83, 0x38, 0xc4,
	0x37, 0x6a, 0x2d, 0x27, 0x6e, 0x4c, 0xf3, 0x02, 0x63, 0x0b, 0x13, 0x55, 0xca, 0x37, 0xe2, 0xfc,
	0xa4, 0x67, 0x63, 0xb5, 0x9e, 0x9b, 0xf6, 0x2f, 0xa6, 0x69, 0xa9, 0x72, 0x6e, 0x9e, 0x5d, 0x8e,
	0xae, 0xb0, 0xaa, 0xf0, 0xa8, 0xd5, 0x23, 0x17, 0x2a, 0xe4, 0x7b, 0x71, 0x83, 0x2d, 0x0b, 0x5f,
	0x1a, 0x03, 0xb5, 0x91, 0x27, 0x4c, 0xf3, 0xc6, 0xc0, 0xea, 0xce, 0x41, 0x08, 0xbb, 0x1b, 0x6f,
	0x36, 0x7a, 0x06, 0xb0, 0xa0, 0x71, 0xe2, 0xb3, 0x70, 0xfc, 0xf0, 0x91, 0x55, 0xca, 0x88, 0xe1,
	0xa1, 0xef, 0x41, 0x9a, 0xf1, 0x1b, 0xe7, 0x27, 0x6f, 0x74, 0x0f, 0xdf, 0x6d, 0x32, 0xa4, 0x54,
	0x9d, 0x50, 0x78, 0xba, 0x21, 0x70, 0x22, 0x7f, 0x5d, 0x74, 0x83, 0xa7, 0x7e, 0x3a, 0xcb, 0x26,
	0xba, 0xcb, 0xe6, 0xed, 0x02, 0x3c, 0x2a, 0xfe, 0x08, 0x53, 0x76, 0x34, 0xa5, 0x21, 0xff, 0x60,
	0xb7, 0xb7, 0xfd, 0x51, 0xbe, 0x5d, 0xd9, 0x13, 0x89, 0x83, 0xcf, 0xff, 0x0e, 0x00, 0x00, 0xff,
	0xff, 0xa3, 0xef, 0xf9, 0x78, 0xe0, 0x06, 0x00, 0x00,
}
